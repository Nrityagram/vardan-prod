@use 'grid' as *;
@use 'flow' as *;
@use '../abstracts/' as *;


.left-column {
    grid-area: leftcol;
}

.right-column {
    grid-area: rightcol;
}

.narrow-column {
    grid-area: narrowcol;

    @include mqmax(medium) {
        align-self: center;
    }
}

.narrow-column :where(:not(:first-child)) {
    margin-top: var(--flow-spacer-close);
}

.wide-column {
    grid-area: widecol;

    @include mqmax(medium) {
        align-self: center;
    }
}

.spacer-column {
    grid-area: spacercol;
}

.center-column {
    padding-left: 25%;
    padding-right: 25%;

    @include mqmax(medium) {
        padding-left: 0;
        padding-right: 0;
    }
}


// TODO: make a sass/layouts folder to implement specific layout designs such pullquote-column, narrow-wide-40-60, etc.

.even-columns-unlimited {
    @extend .grid;
    place-items: center;

    // For ipad mini (portrait) we want slideup cards to appear 2x2,
    // hence a different medium berakpoint at 720px instead of 800px
    @include mq(medium2) {
        grid-template-columns: repeat(2, 1fr);
    }

    @include mq(large2) {
        grid-auto-flow: column;
        grid-auto-columns: 1fr;
    }

    &.center-column-pair {
        grid-auto-flow: column;
        grid-auto-columns: 1fr;

        // For mobile, the pair of columns will be stacked
        .column-1 {
            grid-row: 1 / 2;
            grid-column: 1 / 2;
        }

        .column-2 {
            grid-row: 2 / 3;
            grid-column: 1 / 2;
        }

        @include mq(medium) {
            grid-template-columns: repeat(2, 1fr);

            .column-1 {
                grid-row: 1 / 2;
                grid-column: 1 / 2;
            }

            .column-2 {
                grid-row: 1 / 2;
                grid-column: 2 / 3;
            }
        }

        @include mq(large) {
            grid-template-columns: repeat(4, 1fr);

            .column-1 {
                grid-row: 1 / 2;
                grid-column: 2 / 3;
            }

            .column-2 {
                grid-row: 1 / 2;
                grid-column: 3 / 4;
            }
        }
    }

    &.textbox-card-pair {
        grid-auto-flow: column;
        grid-auto-columns: 1fr;

        // For mobile, the pair of columns will be stacked
        .textbox-column {
            grid-row: 1 / 2;
            grid-column: 1 / 2;
        }

        .card-column {
            grid-row: 2 / 3;
            grid-column: 1 / 2;
        }

        // tablet
        // Using medium2 breakpoint to have 
        // two equal columns for ipad mini
        @include mq(medium2) {
            grid-template-columns: repeat(2, 1fr);

            // textbox will be first column
            .textbox-column {
                grid-row: 1 / 2;
                grid-column: 1 / 2;
            }

            .card-column {
                grid-row: 1 / 2;
                grid-column: 2 / 3;
            }
        }

        // desktop (large screens)
        @include mq(large) {
            grid-template-columns: repeat(3, 1fr);

            // textbox will be 1st and 2nd columns
            .textbox-column {
                grid-row: 1 / 2;
                grid-column: 1 / 3;
            }

            // card column will be 3rd column
            .card-column {
                grid-row: 1 / 2;
                grid-column: 3 / 4;
            }
        }
    }

    // case: multiple buttons in a row
    // make width of all buttons equal
    .button {
        // TODO: need to take larger value of fit-content and 75% of width
        width: 75%;
    }
}


.even-columns {
    @extend .grid;
    grid-template-columns: 100%;
    grid-template-areas:
        "leftcol"
        "rightcol";

    @include mq(medium) {
        grid-template-columns: 1fr 1fr;
        grid-template-areas:
            "leftcol rightcol";
    }

    &.reverse-mob {

        // mobile
        @include mqmax(medium) {
            grid-template-columns: 100%;
            grid-template-areas:
                "rightcol"
                "leftcol";
        }
    }

    &.reverse-tab {

        // tablet
        @include mqmax(large) {
            grid-template-columns: 100%;
            grid-template-areas:
                "rightcol"
                "leftcol";
        }
    }

    &.hide-right-mob {

        // mobile
        @include mqmax(medium) {
            .right-column {
                display: none;
            }
        }
    }

    &.hide-left-mob {

        // mobile
        @include mqmax(medium) {
            .left-column {
                display: none;
            }
        }
    }
}


.uneven-columns {
    @extend .grid;

    // narrow | wide columns
    &.narrow-wide {
        grid-template-columns: 100%;
        grid-template-areas:
            "narrowcol"
            "widecol";

        @include mq(medium) {
            grid-template-columns: 34% 63%;
            grid-template-areas:
                "narrowcol widecol";
        }
    }

    // narrow | wide columns with pullquote in narrow
    &.pullquote-column {
        grid-template-columns: 100%;
        grid-template-areas:
            "narrowcol"
            "widecol";

        @include mq(medium) {
            grid-template-columns: 24% 67% 6%;
            grid-template-areas:
                "narrowcol widecol spacercol";
        }

        @include mq(medium) {
            .image-plus {
                width: 85% !important;
                margin-left: auto !important;
                margin-right: 0 !important;
            }
        }

        @include mq(large) {
            .image-plus {
                width: 95% !important;
                margin-left: auto !important;
                margin-right: 0 !important;
            }
        }

        &.reverse-mob {

            // mobile
            @include mqmax(medium) {
                grid-template-areas:
                    "widecol"
                    "narrowcol";
            }
        }
    }

    &.narrow-wide-40-60 {
        grid-template-columns: 100%;
        grid-template-areas:
            "narrowcol"
            "widecol";

        @include mq(medium) {
            // auto takes care of wide-grid-gap and does not overflow from the grid
            grid-template-columns: 40% auto;
            grid-template-areas:
                "narrowcol widecol";
        }
    }

    &.narrow-wide,
    &.narrow-wide-40-60 {
        &.reverse-mob {

            // mobile
            @include mqmax(medium) {
                grid-template-areas:
                    "widecol"
                    "narrowcol";
            }
        }

        &.reverse-tab {

            // tablet
            @include mqmax(large) {
                grid-template-areas:
                    "widecol"
                    "narrowcol";
            }
        }
    }

    // wide | narrow columns
    &.wide-narrow {
        grid-auto-columns: 100%;
        grid-template-areas:
            "widecol"
            "narrowcol";

        @include mq(medium) {
            grid-template-columns: 63% 34%;
            grid-template-areas:
                "widecol narrowcol";
        }

        &.reverse-mob {

            // mobile
            @include mqmax(medium) {
                grid-template-areas:
                    "narrowcol"
                    "widecol";
            }
        }

        &.reverse-tab {

            // tablet
            @include mqmax(large) {
                grid-template-areas:
                    "narrowcol"
                    "widecol";
            }
        }
    }

    &.wide-narrow-60-40 {
        grid-template-columns: 100%;
        grid-template-areas:
            "widecol"
            "narrowcol";

        @include mq(medium) {
            grid-template-columns: auto 40%;
            grid-template-areas:
                "widecol narrowcol";
        }
    }

    &.wide-narrow,
    &.wide-narrow-60-40 {
        &.reverse-mob {

            // mobile
            @include mqmax(medium) {
                grid-template-areas:
                    "narrowcol"
                    "widecol";
            }
        }

        &.reverse-tab {

            // tablet
            @include mqmax(large) {
                grid-template-areas:
                    "narrowcol"
                    "widecol";
            }
        }
    }
}

// all direct children in this column are stacked one above the other
.stacked-column {
    display: grid;
    grid-template-columns: 1fr;

    >* {
        grid-row-start: 1;
        grid-column-start: 1;
    }
}

.left-align-column {
    text-align: left;

    @include mqmax(medium) {
        // align-self: center;
        // margin: 0 auto;
        text-align: left;
    }
}

.right-align-column {
    text-align: right;

    @include mqmax(medium) {
        // align-self: center;
        // margin: 0 auto;
        text-align: left;
    }
}

.bottom-align-column {
    align-self: end;
}

.top-align-column {
    align-self: start;
}

.center-align-column {
    align-self: center;
}